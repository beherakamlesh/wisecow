name: Wisecow CI/CD workflow

on:
    push:
        branches:
            - main

env:
    KUBECONFIG: ${{ secrets.KUBECONFIG }}
    AWS_REGION: us-east-1
    ECR_REGISTRY: 661239473781.dkr.ecr.us-east-1.amazonaws.com


jobs:
    build:
        name: Build & push docker image
        runs-on: ubuntu-latest
        env:
            IMG_NAME: wisecow

        steps:

        - name: Checkout code
          uses: actions/checkout@v4

        - name: Debug
          run: |
            echo "github.ref -> ${{ github.ref }}"
        
        - name: Docker metadata
          id: metadata
          uses: docker/metadata-action@v3
          with:
             images: ${{ env.IMG_NAME }}
             tags: latest
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
        - name: Build and push Docker image
          env:
            REGISTRY: ${{ env.ECR_REGISTRY }}
          run: |
           docker build -t ${{env.REGISTRY}}/${{ env.IMG_NAME }}:latest .
           docker push ${{env.REGISTRY}}/${{ env.IMG_NAME }}:latest

    deploy:
      needs: build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v4
        
        - name: Install kubectl
          uses: azure/setup-kubectl@v2.0
          with:
            version: 'v1.29.0'
          id: install
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
    
        - name: Login to Amazon ECR
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
           aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
    
        # - name: Install and configure kubectl
        #   run: |
        #    curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.29.0/2024-01-04/bin/linux/amd64/kubectl
        #    chmod +x ./kubectl
        #    mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
        #    echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
            

        
        - name: Deploy the manifest files to EKS
          run: |
            aws eks update-kubeconfig --name wisecow-cluster --region ${{env.AWS_REGION}}
            export ECR_REPOSITORY="${{ env.ECR_REGISTRY }}/wisecow"
            export IMAGE_TAG=latest
            export KUBECONFIG=$HOME/.kube/config
            envsubst < kubernetes/kustomization.tmpl.yaml > kubernetes/kustomization.yaml
            export KUBERNETES_MASTER=http://127.0.0.1:8080
            kubectl proxy --port=8080
            kubectl kustomize kubernetes | sudo kubectl apply -f -


# https://github.com/kubernetes/kompose/issues/1201
